% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{ScoreSignatures_UCell}
\alias{ScoreSignatures_UCell}
\title{Calculate module enrichment scores from single-cell data}
\usage{
ScoreSignatures_UCell(
  matrix = NULL,
  features,
  precalc.ranks = NULL,
  maxRank = 1500,
  chunk.size = 1000,
  ncores = 1,
  ties.method = "random",
  force.gc = FALSE,
  seed = 123
)
}
\arguments{
\item{matrix}{A gene vs. cell data matrix, either in sparse or dense format. Leave empty if providing a rank matrix with \code{precalc.ranks}}

\item{features}{A list of signatures, for example: \code{list( Tcell_signature = c("CD2","CD3E","CD3D"), Myeloid_signature = c("SPI1","FCER1G","CSF1R"))}}

\item{precalc.ranks}{A sparse matrix of pre-calculated ranks, obtained with \code{\link{StoreRankings_UCell}}}

\item{maxRank}{Maximum number of genes to rank per cell; above this rank, a given gene is considered as not expressed.
Note: this parameter is ignored if precalc.ranks are specified}

\item{chunk.size}{Number of cells to be processed simultaneously (lower size requires slightly more computation but reduces memory demands)}

\item{ncores}{Number of processors to parallelize computation. Requires package \code{future}}

\item{ties.method}{How ranking ties should be resolved (passed on to \code{\link{data.table::frank}})}

\item{force.gc}{Explicitly call garbage collector to reduce memory footprint}

\item{seed}{Integer seed for 'future' parallel execution}
}
\value{
Returns a dataframe of signature scores for each cell
}
\description{
Given a gene vs. cell matrix, calculates module/signature enrichment scores on single-cell level using Mann-Whitney U statistic.
Returned scores are normalized U statistic (equivalent to AUC - Area Under the Curve).
This score depends only on the gene expression ranks of individual cell, and therefore is robust across datasets.
}
\examples{
## Not run:
library(UCell)
my.matrix <- UCell::sample.matrix
gene.sets <- list( Tcell_signature = c("CD2","CD3E","CD3D"), Myeloid_signature = c("SPI1","FCER1G","CSF1R"))
scores <- ScoreSignatures_UCell(my.matrix, features=gene.sets)
scores[1:5,]
## End (Not run)
}
